global rows (prompt "How many rows for your multiplication table?")
global cols (prompt "How many columns for your multiplication table?")

func main
    if (or (eq rows "") (eq rows null))
        as rows 10
    if (or (eq cols "") (eq cols null))
        as cols 10
    (createTable rows cols)
    func createTable rows cols
        let j 1
        let output "<table border='1' width='500' cellspacing='0'cellpadding='5'>"
        forinc i 1 (inc rows)
        as output (concat output "<tr>")
        while (lte j cols)
            as output (concat output "<td>" (mul i j) "</td>")
            as j (inc j)
        as output (concat output "</tr>")
        as j 1
    as output (concat output "</table>")
    (mc write document output)
    


func bio
    (alert (concat 
        ,[this "name" 0] " " 
        ,[this "name" 1] " is " 
        ,[this "age"] " years old. He likes " 
        ,[this "interests" 0] " and " 
        ,[this "interests" 1] "."))

func greeting
    (alert (concat "Hi! I'm " [this "name" 0] "."))

asvar person (map
    ,"name" (list "Bob" "Smith")
    ,"age" 32
    ,"gender" "male"
    ,"interests" (list "music" "skiing")
    ,"bio" bio)
    ,"greeting" greeting  


// nested functions, closures

// exceptions

// aslet

// for-in vs for-of (foreach covers both)
// undefined

// truthy, falsey


// this, method calls

// object prototype chain

// new, constructor functions

// typeof

// global objects (Math, Date)


// (mc Math sin 30)


// event handling